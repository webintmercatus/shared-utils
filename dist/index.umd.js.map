{"version":3,"file":"index.umd.js","sources":["../src/constants/CATEGORIES.ts","../src/fetchConfigs/transformationOptions.ts","../src/sortObjectAlphabetically.ts","../src/fetchConfigs/transformToNested.ts","../src/fetchConfigs/transformResponse.ts","../src/fetchConfigs/transformToConfigValues.ts","../src/getDiff.ts","../src/parseSource/parseSource.ts","../src/logMemoryUsage.ts","../src/parseSource/parseSourceConfigs.ts"],"sourcesContent":["/* eslint-disable no-unused-vars */\nexport enum ConfigCategory {\n  Setting = `setting`,\n  Translation = `translation`,\n  UI = `ui`,\n  Feature = `feature`\n}\n\nexport enum ConfigCategoryPlurals {\n  Setting = `settings`,\n  Translation = `translations`,\n  UI = `ui`,\n  Feature = `features`\n}\n\n/* eslint-enable: no-unused-vars */\nconst CATEGORIES = {\n  [ConfigCategory.Setting]: {\n    plural: ConfigCategoryPlurals.Setting,\n    label: `Setting`,\n    labelPlural: `Settings`,\n    order: 1,\n  },\n  [ConfigCategory.Translation]: {\n    plural: ConfigCategoryPlurals.Translation,\n    label: `Translation`,\n    labelPlural: `Translations`,\n    order: 2,\n  },\n  [ConfigCategory.UI]: {\n    plural: ConfigCategoryPlurals.UI,\n    label: `UI`,\n    labelPlural: `UI`,\n    order: 3,\n  },\n  [ConfigCategory.Feature]: {\n    plural: ConfigCategoryPlurals.Feature,\n    label: `Feature`,\n    labelPlural: `Features`,\n    order: 4,\n  },\n}\n\nexport { CATEGORIES }\n","import lodash from 'lodash'\n\nconst { assign, mapValues } = lodash\n\nexport type TransformationOptions = {\n  nested: boolean,\n  categorized: boolean,\n  sort: boolean,\n}\n\nconst getTransformationOptions = (options: Partial<TransformationOptions> = {}): TransformationOptions => {\n\n  options = mapValues(options, () => true)\n\n  const opts: TransformationOptions = {\n    nested: false,\n    categorized: false,\n    sort: false, // TODO: In EDGE, we may want to be more flexible and allow a string value for `sort` to support different sorting methods\n  }\n\n  return assign(opts, options)\n}\n\nexport { getTransformationOptions }\n","import lodash from 'lodash'\n\nconst { fromPairs, sortBy, toPairs } = lodash\n\nconst sortObjectAlphabetically = object => {\n  return fromPairs(sortBy(toPairs(object), 0)) as object\n}\n\nexport { sortObjectAlphabetically }\n","import lodash from 'lodash'\n\nconst { each, setWith } = lodash\n\nconst transformToNested = object => {\n\n  const transformed = {}\n\n  each(object, (value, key) => {\n    setWith(transformed, key, value, Object)\n  })\n\n  return transformed\n}\n\nexport { transformToNested }\n","import lodash from 'lodash'\n\nimport { CATEGORIES } from '../constants'\nimport { sortObjectAlphabetically } from '../sortObjectAlphabetically'\nimport { getTransformationOptions } from './transformationOptions'\nimport { transformToNested } from './transformToNested'\n\nconst { each, get } = lodash\n\nconst helpTransformResponse = (response, callback = null) => {\n\n  const transformed = {}\n\n  each(response, (value, key) => {\n\n    if (callback) {\n\n      const {\n        key: newKey,\n        value: newValue,\n      } = callback(key, value)\n\n      if (newKey) {\n        key = newKey\n      }\n\n      if (newValue) {\n        value = newValue\n      }\n    }\n\n    transformed[key] = value\n  })\n\n  return transformed\n}\n\nconst transformResponse = (response, opts = {}, configs = null) => {\n\n  const options = getTransformationOptions(opts)\n\n  let transformed = response\n\n  if (options.sort) {\n    transformed = sortObjectAlphabetically(transformed)\n  }\n\n  if (options.categorized) {\n\n    transformed = helpTransformResponse(transformed, key => {\n\n      const config = get(configs, key)\n\n      if (config) {\n        key = `${CATEGORIES[config.category].plural}.${key}`\n      }\n\n      return {\n        key,\n      }\n    })\n  }\n\n  if (options.nested) {\n    return transformToNested(transformed)\n  }\n\n  return transformed\n}\n\nexport { transformResponse }\n","import lodash from 'lodash'\n\nimport { CATEGORIES } from '../constants'\nimport { getTransformationOptions } from './transformationOptions'\nimport { transformToNested } from './transformToNested'\n\nconst { each, get, has } = lodash\n\nconst transformFromConfigsToResponse = (configs, callback = null, defaultsOnly = false) => {\n\n  const response = {}\n\n  each(configs, (config, key) => {\n    // Set inherited values\n    if (config.inherit) {\n      config.default = get(configs, config.inherit).default\n    }\n    // TODO: Figure out why configs have value properties when a configuration is saved but not published\n    let value = has(config, `value`) && !defaultsOnly ? config.value : config.default\n\n    if (callback) {\n\n      const {\n        key: newKey,\n        value: newValue,\n      } = callback(key, config)\n\n      if (newKey) {\n        key = newKey\n      }\n\n      if (newValue) {\n        value = newValue\n      }\n    }\n\n    response[key] = value\n  })\n\n  return response\n}\n\nconst transformToConfigValues = (configs, opts = {}, defaultsOnly = false) => {\n\n  const options = getTransformationOptions(opts)\n\n  const response = transformFromConfigsToResponse(configs, (key, config) => {\n\n    key = options.categorized ? `${CATEGORIES[config.category].plural}.${key}` : key\n\n    return {\n      key,\n    }\n  }, defaultsOnly)\n\n  if (options.nested) {\n    return transformToNested(response)\n  }\n\n  return response\n}\n\nexport { transformFromConfigsToResponse, transformToConfigValues }\n","import lodash from 'lodash'\n\nconst { differenceWith, each, fromPairs, has, isEqual, pickBy, toPairs } = lodash\n\nconst getDiffByStatus = (object1, object2): object => {\n  const changes = fromPairs(differenceWith(toPairs(object2), toPairs(object1), isEqual)) as object\n\n  const added = pickBy(changes, (value, key) => {\n    return !has(object1, key)\n  })\n  \n  const changed = pickBy(changes, (value, key) => {\n    return has(object1, key)\n  })\n\n  const reverseChanges = fromPairs(differenceWith(toPairs(object1), toPairs(object2), isEqual)) as object\n\n  const removed = pickBy(reverseChanges, (value, key) => {\n    return !has(object2, key)\n  })\n\n  return { added: added, changed: changed, removed: removed }\n}\n\nconst getDiff = (object1, object2) => {\n  const diffByStatus = getDiffByStatus(object1, object2)\n\n  const diff = {}\n\n  each (diffByStatus, (value, statusKey) => {\n    each(diffByStatus[statusKey], (value, key) => {\n      diff[key] = {\n        value: value,\n        status: statusKey,\n        previous: object1[key],\n      }\n    })\n  })\n\n  return diff\n}\n\nexport { getDiff, getDiffByStatus }\n","import lodash from 'lodash'\n\nimport type { Component, ComponentOptions, Components, Config, ConfigObject, Configs, Onboarder, Onboarders, OnboarderTabs, Source, StandardizedConfigs } from '../types'\n\nconst { assign, each, get, has, includes, isObject, kebabCase, last, mapKeys, mapValues, merge, set, size, split, startCase, unset } = lodash\n\nexport type SourceConfigs = {\n  getComponents?: () => Promise<Components>,\n  getOverrides?: () => Promise<object>\n  getOnboarders?: () => Promise<Onboarder>,\n  getConfigs?: () => Promise<Configs>,\n  getLabel?: () => string | Promise<string | undefined>,\n  getName?: () => string | Promise<string | undefined>,\n  source?: string\n}\n\n// TODO: HelperFunctions is deprecated\nexport type HelperFunctions = ReturnType<typeof getHelpers>\nexport type Context = ReturnType<typeof getHelpers>\n\nexport type Definitions = {\n  [key: string]: DefinitionComponent\n}\n\n/* eslint-disable no-unused-vars */\nexport type DefinitionComponent = {\n  getConfigs?: (_: HelperFunctions) => Configs\n  getSettings?: (_: HelperFunctions) => Configs\n  getTranslations?: (_: HelperFunctions) => Configs\n  getUI?: (_: HelperFunctions) => Configs,\n  getFeatures?: (_: HelperFunctions) => Configs,\n  getOptions?: () => Component\n}\n\n/* eslint-enable no-unused-vars */\n\nconst getType = (config: Config) => {\n  if (typeof config === `object`) {\n    switch (typeof config.default) {\n      case `boolean`:\n        return `switch`\n    }\n  }\n\n  return `input`\n}\n\nconst standardizeConfig = (key: string, config: Config, skipDefaultCheck = false) => {\n\n  if (isObject(config)) {\n    if (!skipDefaultCheck && (!has(config, `default`) && !has(config, `inherit`))) {\n      throw new Error(`Config \"${key}\" is missing a \"default\" value (or \"inherit\" reference).`)\n    }\n  } else {\n    config = {\n      default: config,\n    }\n  }\n\n  return config as ConfigObject\n}\n\nconst parseConfig = (key: string, config: Config, options: Partial<ConfigObject> = {}) => {\n\n  config = standardizeConfig(key, config)\n\n  delete config.key\n\n  if (config.docLink) {\n    const docLinkText = `Documentation on this feature can be found <a href=\"${config.docLink}\">here</a>.`\n    config.hint = config.hint ? docLinkText + `<br>${config.hint}` : docLinkText\n    delete config.docLink\n  }\n\n  if (config.inherit) {\n    // TODO: It would be nice to eventually show the value of the config that is being inherited from\n    // as part of the message. (This would involve a DB lookup, so we'll save this for a later time.)\n    const inheritText = `When unchanged, inherits value from <code>${config.inherit}</code>.`\n    config.hint = config.hint ? inheritText + `<br>${config.hint}` : inheritText\n  }\n\n  return assign({\n    default: null, // This is placed here so that `default` appears as first property\n    type: getType(config),\n    label: startCase(last(split(key, `.`))),\n    category: `setting`,\n  } as ConfigObject, config, options) as ConfigObject\n}\n\nconst parseConfigs = (\n  configs: Configs,\n  options: Partial<ConfigObject> = {},\n  // eslint-disable-next-line no-unused-vars\n  callback?: (key: string, config: Config) => void,\n) => {\n\n  configs = mapKeys(configs, (config: Config, key: string) => {\n    return get(config, `key`, key)\n  })\n\n  return mapValues(configs, (config: Config, key: string) => {\n\n    callback && callback(key, config)\n\n    return parseConfig(key, config, options)\n  }) as StandardizedConfigs\n}\n\nconst parseUniqueConfigs = (set: Configs, configs: Configs, options: Partial<ConfigObject>) => {\n  return parseConfigs(configs, options, (key) => {\n    if (has(set, key)) {\n      throw new Error(`Duplicate key: \"${key}\"`)\n    }\n  })\n}\n\nconst parseConfigsIntoCollection = (set: Configs, configs: Configs, options: Partial<ComponentOptions>) => {\n  merge(set, parseUniqueConfigs(set, configs, options))\n}\n\nconst getHelpers = (components: Components, component: string, helperType: string = `setting`) => {\n\n  const groupTypes = {\n    group: {\n      path: `groups`,\n    },\n    tab: {\n      path: `tabs`,\n    },\n  }\n\n  const trackedGroups = []\n\n  const walkConfigs = (configs: Configs, callback = null) => {\n\n    const walked = {}\n\n    each(configs, (config, key) => {\n      config = standardizeConfig(key, config)\n      if (callback) {\n        const {\n          config: newConfig,\n          key: newKey,\n        } = callback(key, config)\n        walked[newKey] = newConfig\n      } else {\n        walked[key] = config\n      }\n    })\n\n    return walked\n  }\n\n  const setComponentGroup = (name: string, label: string, configs: Configs, type = `group`) => {\n\n    let path: string = groupTypes[type].path\n    let replacement: ComponentOptions = {}\n\n    each(configs, config => {\n      if (typeof config === `object` && config.group) {\n\n        // TODO: This variable should handle cases where group value is deeply nested\n        const groupExpanded = config.group\n\n        each(groupTypes, groupType => {\n          const group = get(components, [component, groupType.path, groupExpanded])\n          if (group) {\n            set(replacement, [groupType.path, groupExpanded], group)\n            unset(components, [component, groupType.path, groupExpanded])\n\n            const holder = get(components, [component, groupType.path], {})\n            if (size(holder) === 0) {\n              unset(components, [component, groupType.path])\n            }\n          }\n        })\n      }\n    })\n\n    // TODO: Need to think about this more\n    // if (has(components, [component, path, name])) {\n    //   throw new Error(`Duplicate ${type}: \"${name}\"`)\n    // }\n\n    set(components, [component, path, name], assign({\n      label: label,\n    }, replacement))\n  }\n\n  const addNested = (name: string, configs: Configs) => {\n    return walkConfigs(configs, (key: string, config: Config) => {\n\n      if (typeof config === `object`) {\n        if (config.visibleIf) {\n          config.visibleIf = `${name}.${config.visibleIf}`\n        }\n\n        config.longLabel = `${startCase(name)} ⇢ ${config.longLabel ? config.longLabel : (config.label ? config.label : startCase(key))}`\n      }\n\n      return {\n        key: `${name}.${key}`,\n        config,\n      }\n    })\n  }\n\n  const addGroup = (\n    name: string,\n    label: string,\n    configs: Configs,\n    nesting = true,\n    type = `group`,\n    /* eslint-disable-next-line no-unused-vars */\n    callback?: (_: string, _2: Config) => void,\n  ) => {\n\n    // TODO: Eventually store a running list of problems so you can see a count of the issues\n    if (includes(trackedGroups, name)) {\n      console.warn(`\"${name}\" group already exists in \"${helperType}\"`)\n    } else {\n      trackedGroups.push(name)\n    }\n\n    setComponentGroup(name, label, configs, type)\n\n    return walkConfigs(configs, (key: string, config: ConfigObject) => {\n      config.group = config.group ? `${name}.${config.group}` : name\n\n      if (callback) {\n        callback(key, config)\n      }\n\n      return {\n        key: nesting ? `${name}.${key}` : key,\n        config,\n      }\n    })\n  }\n\n  const addFeature = (name: string, label: string, configs: Configs, enabled: boolean | Config = false, nesting = true) => {\n\n    if (has(configs, `enabled`)) {\n      throw new Error(`Feature \"${name}\" should not contain a property named \"enabled\".`)\n    }\n\n    configs = assign({\n      enabled: standardizeConfig(`enabled`, enabled),\n    }, configs)\n\n    configs = addGroup(name, label, configs, nesting, `group`, (key, config) => {\n      if (key !== `enabled`) {\n        typeof config === `object` && set(config, `visibleIf`, `${name}.enabled`)\n      }\n    })\n\n    return configs as StandardizedConfigs\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  type AddFieldCallbackInnerFuncType = (key: string, config: Config) => void\n  // eslint-disable-next-line no-unused-vars\n  type RemoveFieldCallbackInnerFuncType = (key: string) => void\n  // eslint-disable-next-line no-unused-vars\n  type ModifyLabelCallbackInnerFuncType = (key: string) => void\n\n  const addField = (\n    key: string,\n    // eslint-disable-next-line no-unused-vars\n    callback?: (arg: {\n      insert: AddFieldCallbackInnerFuncType,\n      modify: AddFieldCallbackInnerFuncType,\n      remove: RemoveFieldCallbackInnerFuncType,\n      modifyLabel: ModifyLabelCallbackInnerFuncType,\n    }) => void,\n  ) => {\n\n    let fields: Configs = {}\n\n    const visibleIf = `${key}.isVisible`\n\n    const prettyKey = startCase(key)\n\n    let label = prettyKey\n\n    fields.isVisible = {\n      default: true,\n      label: `Visible`,\n      longLabel: `${prettyKey} ⇢ Visible`,\n      styleClasses: `col-md-2`,\n    }\n\n    fields.required = {\n      default: false,\n      label: `Required`,\n      longLabel: `${prettyKey} ⇢ Required`,\n      visibleIf: visibleIf,\n      styleClasses: `col-md-2`,\n    }\n\n    fields.disabled = {\n      default: false,\n      label: `Disabled`,\n      longLabel: `${prettyKey} ⇢ Disabled`,\n      visibleIf: visibleIf,\n      styleClasses: `col-md-2`,\n    }\n\n    fields.hasAutoFocus = {\n      default: false,\n      label: `Autofocus`,\n      longLabel: `${prettyKey} ⇢ Autofocus`,\n      visibleIf: visibleIf,\n      styleClasses: `col-md-2`,\n    }\n\n    fields.pattern = {\n      default: ``,\n      label: `Pattern`,\n      longLabel: `${prettyKey} ⇢ Pattern`,\n      visibleIf: visibleIf,\n      styleClasses: `col-md-12`,\n    }\n\n    if (callback) {\n\n      const insert: AddFieldCallbackInnerFuncType = (key, config) => {\n\n        if (has(fields, key)) {\n          throw new Error(`Field ${key} already exists!`)\n        }\n\n        const parsedConfig = parseConfig(key, config, {\n          visibleIf: visibleIf,\n          styleClasses: `col-md-12`,\n        })\n\n        parsedConfig.longLabel = `${prettyKey} ⇢ ${parsedConfig.label}`\n\n        fields[key] = parsedConfig\n      }\n\n      const modify: AddFieldCallbackInnerFuncType = (key, config) => {\n        merge(fields[key], standardizeConfig(key, config, true))\n      }\n\n      const remove: RemoveFieldCallbackInnerFuncType = key => {\n        delete fields[key]\n      }\n\n      const modifyLabel: ModifyLabelCallbackInnerFuncType = newLabel => {\n        label = newLabel\n      }\n\n      callback && callback({\n        insert,\n        modify,\n        remove,\n        modifyLabel,\n      })\n    }\n\n    return addGroup(key, label, fields, true)\n  }\n\n  const addTab = (label: string, configs: Configs) => {\n\n    const name = `${helperType}-${kebabCase(label)}`\n\n    return addGroup(name, label, configs, false, `tab`)\n  }\n\n  type Pluralized = {\n    zero: string,\n    one: string,\n    many: string,\n  }\n\n  const addPluralized = (name: string, plurals: Pluralized) => {\n\n    const configs = {}\n\n    if (plurals.zero) {\n      configs[`0`] = {\n        default: plurals.zero,\n        label: `Zero Case`,\n        hint: `When there are 0 items`,\n      }\n    }\n\n    if (plurals.one) {\n      configs[`1`] = {\n        default: plurals.one,\n        label: `One Case`,\n        hint: `When there is 1 item`,\n      }\n    }\n\n    if (plurals.many) {\n      configs[`other`] = {\n        default: plurals.many,\n        label: `Many Case`,\n        hint: `When there are many items`,\n      }\n    }\n\n    if (size(configs)) {\n      return addNested(name, configs)\n    }\n  }\n\n  return {\n    addNested,\n    addFeature,\n    addGroup,\n    addTab,\n    addField,\n    addPluralized,\n  }\n}\n\nconst parseConfigsAndComponents = (definitions: Definitions) => {\n\n  const configs: Configs = {}\n  const components = parseComponents(definitions)\n\n  each(definitions, (component, key) => {\n\n    const helpParseConfigsWithCategory = (getCategoryFunction, category = `setting`) => {\n\n      let options: Partial<ConfigObject> = {\n        component: key,\n      }\n\n      const helpers = getHelpers(components, key, category)\n\n      if (category) {\n        options = assign(options, {\n          category: category,\n        })\n      }\n\n      const theseConfigs = getCategoryFunction(helpers)\n      if (size(theseConfigs)) {\n\n        const categories = get(components, [key, `categories`], [])\n        categories.push(category)\n        set(components, [key, `categories`], categories)\n\n        parseConfigsIntoCollection(configs, theseConfigs, options)\n      }\n    }\n\n    const {\n      getConfigs,\n      getFeatures,\n      getSettings,\n      getTranslations,\n      getUI,\n    } = component\n\n    if (getConfigs) {\n      helpParseConfigsWithCategory(getConfigs)\n    } else {\n\n      if (getSettings) {\n        helpParseConfigsWithCategory(getSettings, `setting`)\n      }\n\n      if (getTranslations) {\n        helpParseConfigsWithCategory(getTranslations, `translation`)\n      }\n\n      if (getUI) {\n        helpParseConfigsWithCategory(getUI, `ui`)\n      }\n\n      if (getFeatures) {\n        helpParseConfigsWithCategory(getFeatures, `feature`)\n      }\n    }\n  })\n\n  return {\n    configs,\n    components,\n  }\n}\n\nconst parseComponent = (key: string, component?: ComponentOptions) => {\n  return assign({\n    label: startCase(last(split(key, `.`))),\n    order: 0,\n    toggleable: false,\n    description: null,\n    rootKey: null,\n  }, component) as ComponentOptions\n}\n\nconst parseComponents = (components: Components) => {\n  return mapValues(components, (component, key: string) => {\n    const { getOptions } = component\n\n    return parseComponent(key, getOptions ? getOptions() : null)\n  }) as Components\n}\n\nconst parseComponentsFromConfigs = (configs: Configs, structure: Components = {}) => {\n\n  // TODO: Place all these types in the \"types\" directory\n  const components: Components = {}\n\n  let hasUnsorted = false\n\n  each(configs, config => {\n    if (typeof config === `object` && has(config, `component`)) {\n      if (!has(components, config.component)) {\n\n        let options = {}\n        if (has(structure, config.component)) {\n          const { getOptions } = structure[config.component]\n          options = getOptions ? getOptions() : structure[config.component]\n        }\n\n        components[config.component] = parseComponent(config.component, options)\n      }\n    } else {\n      hasUnsorted = true\n    }\n  })\n\n  if (hasUnsorted && size(components)) {\n    components.unsorted = parseComponent(`unsorted`, {\n      order: 999,\n    })\n  }\n\n  return components\n}\n\nconst standardizeConfigs = (configs: Configs, sourceConfigs): StandardizedConfigs => {\n\n  const standardizedConfigs = {}\n\n  each(configs, config => {\n\n    if (isObject(config) && !has(config, `key`)) {\n      throw new Error(`Onboarder config missing key!`)\n    }\n\n    const key: any = isObject(config) ? config.key : config\n\n    if (!has(sourceConfigs, key)) {\n      throw new Error(`Onboarder defines key \"${key}\" which does not exist.`)\n    }\n\n    if (isObject(config)) {\n      standardizedConfigs[key] = assign({}, sourceConfigs[key], config)\n    } else {\n      standardizedConfigs[key] = assign({}, sourceConfigs[key])\n    }\n  })\n\n  return standardizedConfigs\n}\n\nconst parseOnboarderTabs = (tabs, configs): OnboarderTabs => {\n\n  const parsedOnboardersTabs = {}\n\n  each(tabs, (tab, name) => {\n\n    parsedOnboardersTabs[name] = {\n      label: tab.label ? tab.label : startCase(name),\n      configs: standardizeConfigs(tab.configs, configs),\n    }\n  })\n\n  return parsedOnboardersTabs\n}\n\nconst parseOnboarders = (onboarders, configs): Onboarders => {\n\n  const parsedOnboarders = {}\n\n  each(onboarders, ({ getLabel, getTabs }, name) => {\n\n    parsedOnboarders[name] = {\n      label: getLabel ? getLabel() : startCase(name),\n      tabs: getTabs ? parseOnboarderTabs(getTabs(), configs) : {},\n    }\n  })\n\n  return parsedOnboarders\n}\n\nconst verifyConfigs = configs => {\n\n  each(configs, (config, key) => {\n\n    // Make sure \"inherit\" value exists as a key if defined\n    if (config.inherit) {\n\n      if (!has(configs, config.inherit)) {\n        throw new Error(`Config with key \"${key}\" has inherit property defined as \"${config.inherit}\" which is not a valid key!`)\n      }\n    }\n  })\n}\n\nconst parseSource = async ({ getComponents, getConfigs, getLabel, getName, getOnboarders, getOverrides, source }: SourceConfigs) => {\n\n  const name = getName ? await getName() : source\n  const label = getLabel ? await getLabel() : startCase(name)\n\n  const options: Source = {\n    name,\n    label,\n  }\n\n  const grabComponents = getComponents ? await getComponents() : null\n\n  if (getConfigs) {\n    const configs = parseConfigs(await getConfigs())\n    const components = parseComponentsFromConfigs(configs, grabComponents)\n    merge(options, {\n      configs,\n      components,\n    })\n  } else {\n    let { components, configs } = parseConfigsAndComponents(grabComponents)\n    merge(options, {\n      configs,\n      components,\n    })\n  }\n\n  verifyConfigs(options.configs)\n\n  if (getOnboarders) {\n    options.onboarders = parseOnboarders(await getOnboarders(), options.configs)\n  }\n\n  if (getOverrides) {\n    options.overrides = await getOverrides()\n  }\n\n  return options\n}\n\nclass SourceError extends Error {\n\n  constructor(source, error) {\n    super(`${error.message} (\"${source}\" source)`)\n    this.name = `SourceError`\n  }\n}\n\nexport { parseSource, SourceError }\n","const logMemoryUsage = () => {\n\n  const used = process.memoryUsage()\n\n  let message = `Memory Usage\\n`\n\n  for (let key in used) {\n    message += `${key}: ${Math.round(used[key] / 1024 / 1024 * 100) / 100} MB\\n`\n  }\n\n  console.log(message)\n}\n\nexport { logMemoryUsage }\n\n","import { parseSource, SourceConfigs } from './parseSource'\n\nconst parseSourceConfigs = async (source: string, stack: SourceConfigs) => {\n\n  const parsedSource = await parseSource({\n    source,\n    ...stack,\n  })\n\n  return parsedSource.configs\n}\n\nexport { parseSourceConfigs }\n"],"names":["_CATEGORIES","ConfigCategory","ConfigCategoryPlurals","CATEGORIES","Setting","plural","label","labelPlural","order","Translation","UI","Feature","assign","lodash","mapValues","getTransformationOptions","options","nested","categorized","sort","fromPairs","sortBy","toPairs","object","each","setWith","transformToNested","transformed","value","key","Object","get","has","transformFromConfigsToResponse","configs","callback","defaultsOnly","response","config","inherit","newKey","newValue","differenceWith","isEqual","pickBy","getDiffByStatus","object1","object2","changes","changed","reverseChanges","added","removed","includes","isObject","kebabCase","last","mapKeys","merge","set","size","split","startCase","unset","getType","standardizeConfig","skipDefaultCheck","Error","default","parseConfig","docLink","docLinkText","hint","inheritText","type","category","parseConfigs","component","toggleable","description","rootKey","standardizeConfigs","sourceConfigs","standardizedConfigs","tabs","parsedOnboardersTabs","tab","name","parseSource","getComponents","getConfigs","_ref2","getLabel","getName","getOnboarders","getOverrides","source","_temp7","_temp6","grabComponents","overrides","_getOverrides","onboarders","getTabs","_ref","parsedOnboarders","parseOnboarderTabs","parseOnboarders","_getOnboarders","_temp2","then","_temp3","_temp4","_getConfigs","components","structure","getOptions","parseComponent","hasUnsorted","unsorted","parseComponentsFromConfigs","definitions","parseConfigsAndComponents","parseComponents","helpParseConfigsWithCategory","getCategoryFunction","helpers","helperType","groupTypes","group","path","trackedGroups","walkConfigs","walked","_callback","visibleIf","longLabel","addGroup","nesting","console","warn","push","groupExpanded","groupType","replacement","holder","setComponentGroup","addNested","addFeature","enabled","addTab","addField","fields","prettyKey","isVisible","styleClasses","required","disabled","hasAutoFocus","pattern","insert","parsedConfig","modify","remove","modifyLabel","newLabel","addPluralized","plurals","zero","one","many","getHelpers","theseConfigs","categories","parseUniqueConfigs","parseConfigsIntoCollection","getFeatures","getSettings","getTranslations","getUI","_parseConfigsAndCompo","_temp5","Promise","resolve","_temp9","e","reject","error","_this","_Error","call","this","message","diff","diffByStatus","statusKey","status","previous","used","process","memoryUsage","Math","round","log","stack","parsedSource","opts","sortObjectAlphabetically","helpTransformResponse"],"mappings":"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"}